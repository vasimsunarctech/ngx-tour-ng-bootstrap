{"version":3,"file":"ngx-tour-core.es5.js","sources":["~/ngx-tour-core/ngx-tour-core/src/ngx-tour-core.ts","~/ngx-tour-core/ngx-tour-core/src/tour.module.ts","~/ngx-tour-core/ngx-tour-core/src/tour-hotkey-listener.component.ts","~/ngx-tour-core/ngx-tour-core/src/tour.service.ts"],"sourcesContent":["/**\n * Generated bundle index. Do not edit.\n */\n\nexport {TourModule,TourService,IStepOption,TourState,TourAnchorDirective,TourHotkeyListenerComponent} from './public_api';\n","import { CommonModule } from '@angular/common';\nimport { ModuleWithProviders, NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\n\nimport { TourHotkeyListenerComponent } from './tour-hotkey-listener.component';\nimport { TourService } from './tour.service';\nexport class TourModule {\n/**\n * @return {?}\n */\npublic static forRoot(): ModuleWithProviders {\n        return {\n            ngModule: TourModule,\n            providers: [\n                TourService,\n            ],\n        };\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    declarations: [TourHotkeyListenerComponent],\n    exports: [TourHotkeyListenerComponent],\n    imports: [CommonModule, RouterModule],\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction TourModule_tsickle_Closure_declarations() {\n/** @type {?} */\nTourModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nTourModule.ctorParameters;\n}\n;\n\nexport { TourService };\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, HostListener } from '@angular/core';\n\nimport { TourService, TourState } from './tour.service';\nexport class TourHotkeyListenerComponent {\n/**\n * @param {?} tourService\n */\nconstructor(public tourService: TourService) { }\n/**\n * Configures hot keys for controlling the tour with the keyboard\n * @param {?} event\n * @return {?}\n */\npublic onEscapeKey(event: KeyboardEvent): void {\n    if (this.tourService.getStatus() === TourState.ON) {\n      this.tourService.end();\n    }\n  }\n/**\n * @param {?} event\n * @return {?}\n */\npublic onArrowRightKey(event: KeyboardEvent): void {\n    if (this.tourService.getStatus() === TourState.ON && this.tourService.hasNext(this.tourService.currentStep)) {\n      this.tourService.next();\n    }\n  }\n/**\n * @param {?} event\n * @return {?}\n */\npublic onArrowLeftKey(event: KeyboardEvent): void {\n    if (this.tourService.getStatus() === TourState.ON && this.tourService.hasPrev(this.tourService.currentStep)) {\n      this.tourService.prev();\n    }\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'tour-hotkey-listener',\n  template: ` `,\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: TourService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'onEscapeKey': [{ type: HostListener, args: ['window:keydown.Escape', ] },],\n'onArrowRightKey': [{ type: HostListener, args: ['window:keydown.ArrowRight', ] },],\n'onArrowLeftKey': [{ type: HostListener, args: ['window:keydown.ArrowLeft', ] },],\n};\n}\n\nfunction TourHotkeyListenerComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nTourHotkeyListenerComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nTourHotkeyListenerComponent.ctorParameters;\n/** @type {?} */\nTourHotkeyListenerComponent.propDecorators;\n/** @type {?} */\nTourHotkeyListenerComponent.prototype.tourService;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import'rxjs/add/operator/filter';\nimport'rxjs/add/operator/first';\n\nimport { Injectable } from '@angular/core';\nimport { NavigationStart, Router, UrlSegment } from '@angular/router';\nimport { Observable } from 'rxjs/Observable';\nimport { map } from 'rxjs/operator/map';\nimport { mergeStatic } from 'rxjs/operator/merge';\nimport { Subject } from 'rxjs/Subject';\n\nimport { TourAnchorDirective } from './tour-anchor.directive';\n\nexport interface IStepOption {\n  stepId?: string;\n  anchorId?: string;\n  title?: string;\n  content?: string;\n  route?: string | UrlSegment[];\n  nextStep?: number | string;\n  prevStep?: number | string;\n  placement?: any;\n  preventScrolling?: boolean;\n}\nexport type TourState = number;\nexport let TourState: any = {};\nTourState.OFF = 0;\nTourState.ON = 1;\nTourState.PAUSED = 2;\nTourState[TourState.OFF] = \"OFF\";\nTourState[TourState.ON] = \"ON\";\nTourState[TourState.PAUSED] = \"PAUSED\";\n\nexport class TourService<T extends IStepOption = IStepOption> {\npublic stepShow$: Subject<T> = new Subject();\npublic stepHide$: Subject<T> = new Subject();\npublic initialize$: Subject<T[]> = new Subject();\npublic start$: Subject<T> = new Subject();\npublic end$: Subject<any> = new Subject();\npublic pause$: Subject<T> = new Subject();\npublic resume$: Subject<T> = new Subject();\npublic anchorRegister$: Subject<string> = new Subject();\npublic anchorUnregister$: Subject<string> = new Subject();\npublic events$: Observable<{ name: string, value: any }> = mergeStatic(\n    map.bind(this.stepShow$)(value => ({ name: 'stepShow', value })),\n    map.bind(this.stepHide$)(value => ({ name: 'stepHide', value })),\n    map.bind(this.initialize$)(value => ({ name: 'initialize', value })),\n    map.bind(this.start$)(value => ({ name: 'start', value })),\n    map.bind(this.end$)(value => ({ name: 'end', value })),\n    map.bind(this.pause$)(value => ({ name: 'pause', value })),\n    map.bind(this.resume$)(value => ({ name: 'resume', value })),\n    map.bind(this.anchorRegister$)(value => ({ name: 'anchorRegister', value })),\n    map.bind(this.anchorUnregister$)(value => ({ name: 'anchorUnregister', value })),\n  );\npublic steps: T[] = [];\npublic currentStep: T;\npublic anchors: { [anchorId: string]: TourAnchorDirective } = {};\nprivate status: TourState = TourState.OFF;\n/**\n * @param {?} router\n */\nconstructor(private router: Router) { }\n/**\n * @param {?} steps\n * @param {?=} stepDefaults\n * @return {?}\n */\npublic initialize(steps: T[], stepDefaults?: T): void {\n    if (steps && steps.length > 0) {\n      this.status = TourState.OFF;\n      this.steps = steps.map(step => Object.assign({}, stepDefaults, step));\n      this.initialize$.next(this.steps);\n    }\n  }\n/**\n * @return {?}\n */\npublic start(): void {\n    this.startAt(0);\n  }\n/**\n * @param {?} stepId\n * @return {?}\n */\npublic startAt(stepId: number | string): void {\n    this.status = TourState.ON;\n    this.goToStep(this.loadStep(stepId));\n    this.start$.next();\n    this.router.events.filter(event => event instanceof NavigationStart).first().subscribe(() => {\n      if (this.currentStep) {\n        this.hideStep(this.currentStep);\n      }\n    });\n  }\n/**\n * @return {?}\n */\npublic end(): void {\n    this.status = TourState.OFF;\n    this.hideStep(this.currentStep);\n    this.currentStep = undefined;\n    this.end$.next();\n  }\n/**\n * @return {?}\n */\npublic pause(): void {\n    this.status = TourState.PAUSED;\n    this.hideStep(this.currentStep);\n    this.pause$.next();\n  }\n/**\n * @return {?}\n */\npublic resume(): void {\n    this.status = TourState.ON;\n    this.showStep(this.currentStep);\n    this.resume$.next();\n  }\n/**\n * @param {?=} pause\n * @return {?}\n */\npublic toggle(pause?: boolean): void {\n    if (pause) {\n      if (this.currentStep) {\n        this.pause();\n      } else {\n        this.resume();\n      }\n    } else {\n      if (this.currentStep) {\n        this.end();\n      } else {\n        this.start();\n      }\n    }\n  }\n/**\n * @return {?}\n */\npublic next(): void {\n    if (this.hasNext(this.currentStep)) {\n      this.goToStep(this.loadStep(this.currentStep.nextStep || this.steps.indexOf(this.currentStep) + 1));\n    }\n  }\n/**\n * @param {?} step\n * @return {?}\n */\npublic hasNext(step: T): boolean {\n    if (!step) {\n      console.warn('Can\\'t get next step. No currentStep.');\n      return false;\n    }\n    return step.nextStep !== undefined || this.steps.indexOf(step) < this.steps.length - 1;\n  }\n/**\n * @return {?}\n */\npublic prev(): void {\n    if (this.hasPrev(this.currentStep)) {\n      this.goToStep(this.loadStep(this.currentStep.prevStep || this.steps.indexOf(this.currentStep) - 1));\n    }\n  }\n/**\n * @param {?} step\n * @return {?}\n */\npublic hasPrev(step: T): boolean {\n    if (!step) {\n      console.warn('Can\\'t get previous step. No currentStep.');\n      return false;\n    }\n    return step.prevStep !== undefined || this.steps.indexOf(step) > 0;\n  }\n/**\n * @param {?} stepId\n * @return {?}\n */\npublic goto(stepId: number | string): void {\n    this.goToStep(this.loadStep(stepId));\n  }\n/**\n * @param {?} anchorId\n * @param {?} anchor\n * @return {?}\n */\npublic register(anchorId: string, anchor: TourAnchorDirective): void {\n    if (this.anchors[anchorId]) {\n      throw new Error('anchorId ' + anchorId + ' already registered!');\n    }\n    this.anchors[anchorId] = anchor;\n    this.anchorRegister$.next(anchorId);\n  }\n/**\n * @param {?} anchorId\n * @return {?}\n */\npublic unregister(anchorId: string): void {\n    delete this.anchors[anchorId];\n    this.anchorUnregister$.next(anchorId);\n  }\n/**\n * @return {?}\n */\npublic getStatus(): TourState {\n    return this.status;\n  }\n/**\n * @param {?} step\n * @return {?}\n */\nprivate goToStep(step: T): void {\n    if (!step) {\n      console.warn('Can\\'t go to non-existent step');\n      this.end();\n      return;\n    }\n    let /** @type {?} */ navigatePromise: Promise<boolean> = new Promise(resolve => resolve(true));\n    if (step.route !== undefined && typeof (step.route) === 'string') {\n      navigatePromise = this.router.navigateByUrl(step.route);\n    } else if (step.route && Array.isArray(step.route)) {\n      navigatePromise = this.router.navigate(step.route);\n    }\n    navigatePromise.then(navigated => {\n      if (navigated !== false) {\n        setTimeout(() => this.setCurrentStep(step));\n      }\n    });\n  }\n/**\n * @param {?} stepId\n * @return {?}\n */\nprivate loadStep(stepId: number | string): T {\n    if (typeof (stepId) === 'number') {\n      return this.steps[stepId];\n    } else {\n      return this.steps.find(step => step.stepId === stepId);\n    }\n  }\n/**\n * @param {?} step\n * @return {?}\n */\nprivate setCurrentStep(step: T): void {\n    if (this.currentStep) {\n      this.hideStep(this.currentStep);\n    }\n    this.currentStep = step;\n    this.showStep(this.currentStep);\n    this.router.events.filter(event => event instanceof NavigationStart).first().subscribe(() => {\n      if (this.currentStep) {\n        this.hideStep(this.currentStep);\n      }\n    });\n  }\n/**\n * @param {?} step\n * @return {?}\n */\nprivate showStep(step: T): void {\n    const /** @type {?} */ anchor = this.anchors[step && step.anchorId];\n    if (!anchor) {\n      this.end();\n      return;\n    }\n    anchor.showTourStep(step);\n    this.stepShow$.next(step);\n  }\n/**\n * @param {?} step\n * @return {?}\n */\nprivate hideStep(step: T): void {\n    const /** @type {?} */ anchor = this.anchors[step && step.anchorId];\n    if (!anchor) {\n      return;\n    }\n    anchor.hideTourStep();\n    this.stepHide$.next(step);\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: Router, },\n];\n}\n\nfunction TourService_tsickle_Closure_declarations() {\n/** @type {?} */\nTourService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nTourService.ctorParameters;\n/** @type {?} */\nTourService.prototype.stepShow$;\n/** @type {?} */\nTourService.prototype.stepHide$;\n/** @type {?} */\nTourService.prototype.initialize$;\n/** @type {?} */\nTourService.prototype.start$;\n/** @type {?} */\nTourService.prototype.end$;\n/** @type {?} */\nTourService.prototype.pause$;\n/** @type {?} */\nTourService.prototype.resume$;\n/** @type {?} */\nTourService.prototype.anchorRegister$;\n/** @type {?} */\nTourService.prototype.anchorUnregister$;\n/** @type {?} */\nTourService.prototype.events$;\n/** @type {?} */\nTourService.prototype.steps;\n/** @type {?} */\nTourService.prototype.currentStep;\n/** @type {?} */\nTourService.prototype.anchors;\n/** @type {?} */\nTourService.prototype.status;\n/** @type {?} */\nTourService.prototype.router;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"],"names":["map","Subject","router"],"mappings":"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"}