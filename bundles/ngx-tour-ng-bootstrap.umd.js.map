{"version":3,"file":"ngx-tour-ng-bootstrap.umd.js","sources":["~/ngx-tour-ng-bootstrap/ngx-tour-ng-bootstrap/src/ng-bootstrap.module.ts","~/ngx-tour-ng-bootstrap/ngx-tour-ng-bootstrap/src/tour-step-template.component.ts","~/ngx-tour-ng-bootstrap/ngx-tour-ng-bootstrap/src/tour-anchor.directive.ts","~/ngx-tour-ng-bootstrap/ngx-tour-ng-bootstrap/src/tour-step-template.service.ts","../../dist/ngx-tour-core/ngx-tour-core/~/ngx-tour-core/ngx-tour-core/src/tour.module.ts","../../dist/ngx-tour-core/ngx-tour-core/~/ngx-tour-core/ngx-tour-core/src/tour-hotkey-listener.component.ts","../../dist/ngx-tour-core/ngx-tour-core/~/ngx-tour-core/ngx-tour-core/src/tour.service.ts"],"sourcesContent":["import { CommonModule } from '@angular/common';\nimport { ModuleWithProviders, NgModule } from '@angular/core';\nimport { NgbPopoverModule } from '@ng-bootstrap/ng-bootstrap/index';\nimport { TourModule, TourService } from 'ngx-tour-core';\n\nimport { TourAnchorNgBootstrapDirective } from './tour-anchor.directive';\nimport { TourStepTemplateComponent } from './tour-step-template.component';\nimport { TourStepTemplateService } from './tour-step-template.service';\n\nexport { TourAnchorNgBootstrapDirective, TourStepTemplateComponent, TourService };\nexport class TourNgBootstrapModule {\n/**\n * @return {?}\n */\npublic static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: TourNgBootstrapModule,\n      providers: [\n        TourStepTemplateService,\n        ...TourModule.forRoot().providers,\n      ],\n    };\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  declarations: [TourAnchorNgBootstrapDirective, TourStepTemplateComponent],\n  exports: [TourAnchorNgBootstrapDirective, TourStepTemplateComponent],\n  imports: [CommonModule, NgbPopoverModule.forRoot()],\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction TourNgBootstrapModule_tsickle_Closure_declarations() {\n/** @type {?} */\nTourNgBootstrapModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nTourNgBootstrapModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { TourService, TourHotkeyListenerComponent, IStepOption } from 'ngx-tour-core';\nimport { TourStepTemplateService } from './tour-step-template.service';\nimport { Component, TemplateRef, ViewChild, AfterContentInit, ViewEncapsulation, Input, ContentChild } from '@angular/core';\nexport class TourStepTemplateComponent extends TourHotkeyListenerComponent implements AfterContentInit {\npublic defaultTourStepTemplate: TemplateRef<any>;\npublic stepTemplate: TemplateRef<{ step: IStepOption }>;\n/**\n * @param {?} tourStepTemplateService\n * @param {?} tourService\n */\nconstructor(private tourStepTemplateService: TourStepTemplateService,\npublic tourService: TourService) {\n    super(tourService);\n  }\n/**\n * @return {?}\n */\npublic ngAfterContentInit(): void {\n    this.tourStepTemplateService.template = this.stepTemplate || this.defaultTourStepTemplate;\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  encapsulation: ViewEncapsulation.None,\n  selector: 'tour-step-template',\n  template: `\n    <ng-template #tourStep let-step=\"step\">\n      <p class=\"tour-step-content\">{{step?.content}}</p>\n      <div class=\"tour-step-navigation\">\n        <button *ngIf=\"tourService.hasPrev(step)\" class=\"btn btn-sm btn-default\" (click)=\"tourService.prev()\">« Prev</button>\n        <button *ngIf=\"tourService.hasNext(step)\" class=\"btn btn-sm btn-default\" (click)=\"tourService.next()\">Next »</button>\n        <button class=\"btn btn-sm btn-default\" (click)=\"tourService.end()\">End</button>\n      </div>\n    </ng-template>\n  `,\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: TourStepTemplateService, },\n{type: TourService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'defaultTourStepTemplate': [{ type: ViewChild, args: ['tourStep', { read: TemplateRef }, ] },],\n'stepTemplate': [{ type: Input },{ type: ContentChild, args: [TemplateRef, ] },],\n};\n}\n\nfunction TourStepTemplateComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nTourStepTemplateComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nTourStepTemplateComponent.ctorParameters;\n/** @type {?} */\nTourStepTemplateComponent.propDecorators;\n/** @type {?} */\nTourStepTemplateComponent.prototype.defaultTourStepTemplate;\n/** @type {?} */\nTourStepTemplateComponent.prototype.stepTemplate;\n/** @type {?} */\nTourStepTemplateComponent.prototype.tourStepTemplateService;\n/** @type {?} */\nTourStepTemplateComponent.prototype.tourService;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import {\n  ComponentFactoryResolver,\n  Directive,\n  ElementRef,\n  Injector,\n  Input,\n  NgZone,\n  OnDestroy,\n  OnInit,\n  Renderer2,\n  ViewContainerRef,\n} from '@angular/core';\nimport { NgbPopoverConfig, NgbPopover } from '@ng-bootstrap/ng-bootstrap/index';\nimport { IStepOption, TourAnchorDirective, TourService } from 'ngx-tour-core';\nimport withinviewport from 'withinviewport';\n\nimport { TourStepTemplateService } from './tour-step-template.service';\nexport class TourAnchorNgBootstrapDirective extends NgbPopover implements OnInit, OnDestroy, TourAnchorDirective {\npublic tourAnchor: string;\nprivate element: ElementRef;\n/**\n * @param {?} tourService\n * @param {?} tourStepTemplate\n * @param {?} _elementRef\n * @param {?} _renderer\n * @param {?} injector\n * @param {?} componentFactoryResolver\n * @param {?} viewContainerRef\n * @param {?} config\n * @param {?} ngZone\n */\nconstructor(\nprivate tourService: TourService,\nprivate tourStepTemplate: TourStepTemplateService, _elementRef: ElementRef, _renderer: Renderer2,\n    injector: Injector, componentFactoryResolver: ComponentFactoryResolver, viewContainerRef: ViewContainerRef, config: NgbPopoverConfig,\n    ngZone: NgZone,\n  ) {\n    super(_elementRef, _renderer, injector, componentFactoryResolver, viewContainerRef, config, ngZone);\n    this.element = _elementRef;\n  }\n/**\n * @return {?}\n */\npublic ngOnInit(): void {\n    this.tourService.register(this.tourAnchor, this);\n  }\n/**\n * @return {?}\n */\npublic ngOnDestroy(): void {\n    this.tourService.unregister(this.tourAnchor);\n  }\n/**\n * @param {?} step\n * @return {?}\n */\npublic showTourStep(step: IStepOption): void {\n    this.ngbPopover = this.tourStepTemplate.template;\n    this.popoverTitle = step.title;\n    this.container =  'body';\n    switch (step.placement) {\n      case 'above':\n        this.placement = 'top';\n        break;\n      case 'below':\n        this.placement = 'bottom';\n        break;\n      case 'right':\n      case 'after':\n        this.placement = 'right';\n        break;\n      case 'left':\n      case 'before':\n        this.placement = 'left';\n        break;\n      default:\n        this.placement = 'top';\n    }\n    this.open({ step });\n    if (!step.preventScrolling) {\n      if (!withinviewport(this.element.nativeElement, { sides: 'bottom' })) {\n        ( /** @type {?} */((<HTMLElement>this.element.nativeElement))).scrollIntoView(false);\n      } else if (!withinviewport(this.element.nativeElement, { sides: 'left top right' })) {\n        ( /** @type {?} */((<HTMLElement>this.element.nativeElement))).scrollIntoView(true);\n      }\n    }\n  }\n/**\n * @return {?}\n */\npublic hideTourStep(): void {\n    this.close();\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: '[tourAnchor]',\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: TourService, },\n{type: TourStepTemplateService, },\n{type: ElementRef, },\n{type: Renderer2, },\n{type: Injector, },\n{type: ComponentFactoryResolver, },\n{type: ViewContainerRef, },\n{type: NgbPopoverConfig, },\n{type: NgZone, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'tourAnchor': [{ type: Input },],\n};\n}\n\nfunction TourAnchorNgBootstrapDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nTourAnchorNgBootstrapDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nTourAnchorNgBootstrapDirective.ctorParameters;\n/** @type {?} */\nTourAnchorNgBootstrapDirective.propDecorators;\n/** @type {?} */\nTourAnchorNgBootstrapDirective.prototype.tourAnchor;\n/** @type {?} */\nTourAnchorNgBootstrapDirective.prototype.element;\n/** @type {?} */\nTourAnchorNgBootstrapDirective.prototype.tourService;\n/** @type {?} */\nTourAnchorNgBootstrapDirective.prototype.tourStepTemplate;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Injectable, TemplateRef } from '@angular/core';\nexport class TourStepTemplateService {\npublic template: TemplateRef<{content: string}>;\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction TourStepTemplateService_tsickle_Closure_declarations() {\n/** @type {?} */\nTourStepTemplateService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nTourStepTemplateService.ctorParameters;\n/** @type {?} */\nTourStepTemplateService.prototype.template;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { CommonModule } from '@angular/common';\nimport { ModuleWithProviders, NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\n\nimport { TourHotkeyListenerComponent } from './tour-hotkey-listener.component';\nimport { TourService } from './tour.service';\nexport class TourModule {\n/**\n * @return {?}\n */\npublic static forRoot(): ModuleWithProviders {\n        return {\n            ngModule: TourModule,\n            providers: [\n                TourService,\n            ],\n        };\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    declarations: [TourHotkeyListenerComponent],\n    exports: [TourHotkeyListenerComponent],\n    imports: [CommonModule, RouterModule],\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction TourModule_tsickle_Closure_declarations() {\n/** @type {?} */\nTourModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nTourModule.ctorParameters;\n}\n;\n\nexport { TourService };\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, HostListener } from '@angular/core';\n\nimport { TourService, TourState } from './tour.service';\nexport class TourHotkeyListenerComponent {\n/**\n * @param {?} tourService\n */\nconstructor(public tourService: TourService) { }\n/**\n * Configures hot keys for controlling the tour with the keyboard\n * @param {?} event\n * @return {?}\n */\npublic onEscapeKey(event: KeyboardEvent): void {\n    if (this.tourService.getStatus() === TourState.ON) {\n      this.tourService.end();\n    }\n  }\n/**\n * @param {?} event\n * @return {?}\n */\npublic onArrowRightKey(event: KeyboardEvent): void {\n    if (this.tourService.getStatus() === TourState.ON && this.tourService.hasNext(this.tourService.currentStep)) {\n      this.tourService.next();\n    }\n  }\n/**\n * @param {?} event\n * @return {?}\n */\npublic onArrowLeftKey(event: KeyboardEvent): void {\n    if (this.tourService.getStatus() === TourState.ON && this.tourService.hasPrev(this.tourService.currentStep)) {\n      this.tourService.prev();\n    }\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'tour-hotkey-listener',\n  template: ` `,\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: TourService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'onEscapeKey': [{ type: HostListener, args: ['window:keydown.Escape', ] },],\n'onArrowRightKey': [{ type: HostListener, args: ['window:keydown.ArrowRight', ] },],\n'onArrowLeftKey': [{ type: HostListener, args: ['window:keydown.ArrowLeft', ] },],\n};\n}\n\nfunction TourHotkeyListenerComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nTourHotkeyListenerComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nTourHotkeyListenerComponent.ctorParameters;\n/** @type {?} */\nTourHotkeyListenerComponent.propDecorators;\n/** @type {?} */\nTourHotkeyListenerComponent.prototype.tourService;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import'rxjs/add/operator/filter';\nimport'rxjs/add/operator/first';\n\nimport { Injectable } from '@angular/core';\nimport { NavigationStart, Router, UrlSegment } from '@angular/router';\nimport { Observable } from 'rxjs/Observable';\nimport { map } from 'rxjs/operator/map';\nimport { mergeStatic } from 'rxjs/operator/merge';\nimport { Subject } from 'rxjs/Subject';\n\nimport { TourAnchorDirective } from './tour-anchor.directive';\n\nexport interface IStepOption {\n  stepId?: string;\n  anchorId?: string;\n  title?: string;\n  content?: string;\n  route?: string | UrlSegment[];\n  nextStep?: number | string;\n  prevStep?: number | string;\n  placement?: 'above' | 'below' | 'after' | 'before' | 'left' | 'right';\n  preventScrolling?: boolean;\n}\nexport type TourState = number;\nexport let TourState: any = {};\nTourState.OFF = 0;\nTourState.ON = 1;\nTourState.PAUSED = 2;\nTourState[TourState.OFF] = \"OFF\";\nTourState[TourState.ON] = \"ON\";\nTourState[TourState.PAUSED] = \"PAUSED\";\n\nexport class TourService {\npublic stepShow$: Subject<IStepOption> = new Subject();\npublic stepHide$: Subject<IStepOption> = new Subject();\npublic initialize$: Subject<IStepOption[]> = new Subject();\npublic start$: Subject<IStepOption> = new Subject();\npublic end$: Subject<any> = new Subject();\npublic pause$: Subject<IStepOption> = new Subject();\npublic resume$: Subject<IStepOption> = new Subject();\npublic anchorRegister$: Subject<string> = new Subject();\npublic anchorUnregister$: Subject<string> = new Subject();\npublic events$: Observable<{ name: string, value: any }> = mergeStatic(\n    map.bind(this.stepShow$)(value => ({ name: 'stepShow', value })),\n    map.bind(this.stepHide$)(value => ({ name: 'stepHide', value })),\n    map.bind(this.initialize$)(value => ({ name: 'initialize', value })),\n    map.bind(this.start$)(value => ({ name: 'start', value })),\n    map.bind(this.end$)(value => ({ name: 'end', value })),\n    map.bind(this.pause$)(value => ({ name: 'pause', value })),\n    map.bind(this.resume$)(value => ({ name: 'resume', value })),\n    map.bind(this.anchorRegister$)(value => ({ name: 'anchorRegister', value })),\n    map.bind(this.anchorUnregister$)(value => ({ name: 'anchorUnregister', value })),\n  );\npublic steps: IStepOption[] = [];\npublic currentStep: IStepOption;\npublic anchors: { [anchorId: string]: TourAnchorDirective } = {};\nprivate status: TourState = TourState.OFF;\n/**\n * @param {?} router\n */\nconstructor(private router: Router) { }\n/**\n * @param {?} steps\n * @param {?=} stepDefaults\n * @return {?}\n */\npublic initialize(steps: IStepOption[], stepDefaults?: IStepOption): void {\n    if (steps && steps.length > 0) {\n      this.status = TourState.OFF;\n      this.steps = steps.map(step => Object.assign({}, stepDefaults, step));\n      this.initialize$.next(this.steps);\n    }\n  }\n/**\n * @return {?}\n */\npublic start(): void {\n    this.startAt(0);\n  }\n/**\n * @param {?} stepId\n * @return {?}\n */\npublic startAt(stepId: number | string): void {\n    this.status = TourState.ON;\n    this.goToStep(this.loadStep(stepId));\n    this.start$.next();\n    this.router.events.filter(event => event instanceof NavigationStart).first().subscribe(() => {\n      if (this.currentStep) {\n        this.hideStep(this.currentStep);\n      }\n    });\n  }\n/**\n * @return {?}\n */\npublic end(): void {\n    this.status = TourState.OFF;\n    this.hideStep(this.currentStep);\n    this.currentStep = undefined;\n    this.end$.next();\n  }\n/**\n * @return {?}\n */\npublic pause(): void {\n    this.status = TourState.PAUSED;\n    this.hideStep(this.currentStep);\n    this.pause$.next();\n  }\n/**\n * @return {?}\n */\npublic resume(): void {\n    this.status = TourState.ON;\n    this.showStep(this.currentStep);\n    this.resume$.next();\n  }\n/**\n * @param {?=} pause\n * @return {?}\n */\npublic toggle(pause?: boolean): void {\n    if (pause) {\n      if (this.currentStep) {\n        this.pause();\n      } else {\n        this.resume();\n      }\n    } else {\n      if (this.currentStep) {\n        this.end();\n      } else {\n        this.start();\n      }\n    }\n  }\n/**\n * @return {?}\n */\npublic next(): void {\n    if (this.hasNext(this.currentStep)) {\n      this.goToStep(this.loadStep(this.currentStep.nextStep || this.steps.indexOf(this.currentStep) + 1));\n    }\n  }\n/**\n * @param {?} step\n * @return {?}\n */\npublic hasNext(step: IStepOption): boolean {\n    if (!step) {\n      console.warn('Can\\'t get next step. No currentStep.');\n      return false;\n    }\n    return step.nextStep !== undefined || this.steps.indexOf(step) < this.steps.length - 1;\n  }\n/**\n * @return {?}\n */\npublic prev(): void {\n    if (this.hasPrev(this.currentStep)) {\n      this.goToStep(this.loadStep(this.currentStep.prevStep || this.steps.indexOf(this.currentStep) - 1));\n    }\n  }\n/**\n * @param {?} step\n * @return {?}\n */\npublic hasPrev(step: IStepOption): boolean {\n    if (!step) {\n      console.warn('Can\\'t get previous step. No currentStep.');\n      return false;\n    }\n    return step.prevStep !== undefined || this.steps.indexOf(step) > 0;\n  }\n/**\n * @param {?} stepId\n * @return {?}\n */\npublic goto(stepId: number | string): void {\n    this.goToStep(this.loadStep(stepId));\n  }\n/**\n * @param {?} anchorId\n * @param {?} anchor\n * @return {?}\n */\npublic register(anchorId: string, anchor: TourAnchorDirective): void {\n    if (this.anchors[anchorId]) {\n      throw new Error('anchorId ' + anchorId + ' already registered!');\n    }\n    this.anchors[anchorId] = anchor;\n    this.anchorRegister$.next(anchorId);\n  }\n/**\n * @param {?} anchorId\n * @return {?}\n */\npublic unregister(anchorId: string): void {\n    delete this.anchors[anchorId];\n    this.anchorUnregister$.next(anchorId);\n  }\n/**\n * @return {?}\n */\npublic getStatus(): TourState {\n    return this.status;\n  }\n/**\n * @param {?} step\n * @return {?}\n */\nprivate goToStep(step: IStepOption): void {\n    if (!step) {\n      console.warn('Can\\'t go to non-existent step');\n      this.end();\n      return;\n    }\n    let /** @type {?} */ navigatePromise: Promise<boolean> = new Promise(resolve => resolve(true));\n    if (step.route !== undefined && typeof (step.route) === 'string') {\n      navigatePromise = this.router.navigateByUrl(step.route);\n    } else if (step.route && Array.isArray(step.route)) {\n      navigatePromise = this.router.navigate(step.route);\n    }\n    navigatePromise.then(navigated => {\n      if (navigated !== false) {\n        setTimeout(() => this.setCurrentStep(step));\n      }\n    });\n  }\n/**\n * @param {?} stepId\n * @return {?}\n */\nprivate loadStep(stepId: number | string): IStepOption {\n    if (typeof (stepId) === 'number') {\n      return this.steps[stepId];\n    } else {\n      return this.steps.find(step => step.stepId === stepId);\n    }\n  }\n/**\n * @param {?} step\n * @return {?}\n */\nprivate setCurrentStep(step: IStepOption): void {\n    if (this.currentStep) {\n      this.hideStep(this.currentStep);\n    }\n    this.currentStep = step;\n    this.showStep(this.currentStep);\n    this.router.events.filter(event => event instanceof NavigationStart).first().subscribe(() => {\n      if (this.currentStep) {\n        this.hideStep(this.currentStep);\n      }\n    });\n  }\n/**\n * @param {?} step\n * @return {?}\n */\nprivate showStep(step: IStepOption): void {\n    const /** @type {?} */ anchor = this.anchors[step && step.anchorId];\n    if (!anchor) {\n      this.end();\n      return;\n    }\n    anchor.showTourStep(step);\n    this.stepShow$.next(step);\n  }\n/**\n * @param {?} step\n * @return {?}\n */\nprivate hideStep(step: IStepOption): void {\n    const /** @type {?} */ anchor = this.anchors[step && step.anchorId];\n    if (!anchor) {\n      return;\n    }\n    anchor.hideTourStep();\n    this.stepHide$.next(step);\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: Router, },\n];\n}\n\nfunction TourService_tsickle_Closure_declarations() {\n/** @type {?} */\nTourService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nTourService.ctorParameters;\n/** @type {?} */\nTourService.prototype.stepShow$;\n/** @type {?} */\nTourService.prototype.stepHide$;\n/** @type {?} */\nTourService.prototype.initialize$;\n/** @type {?} */\nTourService.prototype.start$;\n/** @type {?} */\nTourService.prototype.end$;\n/** @type {?} */\nTourService.prototype.pause$;\n/** @type {?} */\nTourService.prototype.resume$;\n/** @type {?} */\nTourService.prototype.anchorRegister$;\n/** @type {?} */\nTourService.prototype.anchorUnregister$;\n/** @type {?} */\nTourService.prototype.events$;\n/** @type {?} */\nTourService.prototype.steps;\n/** @type {?} */\nTourService.prototype.currentStep;\n/** @type {?} */\nTourService.prototype.anchors;\n/** @type {?} */\nTourService.prototype.status;\n/** @type {?} */\nTourService.prototype.router;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"],"names":["CommonModule","NgbPopoverModule","NgModule","Input","ContentChild","TemplateRef","ViewChild","ViewEncapsulation","Component","NgZone","NgbPopoverConfig","ViewContainerRef","ComponentFactoryResolver","Injector","Renderer2","ElementRef","Directive","NgbPopover","Injectable","RouterModule","HostListener","Router","NavigationStart","mergeStatic","map","Subject","router"],"mappings":"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"}